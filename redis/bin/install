#!/usr/bin/env bash

log()  { printf "$*\n" ; return $? ;  }
fail() { log "ERROR: $*" ; exit 1 ; }

setup_redis_user()
{
  if [[ $UID -eq 0 ]] ; then
    useradd -r redis # TODO: Make this more robust...
  fi
  return 0
}

create_redis_directories()
{
  local directory redis_path

  log "Creating paths for ${package} ${version}...\n"
  # TODO: can likely merge directory creation into path creation.
  for directory in "${directories[@]}" ; do
    [[ ! -d "$directory" ]] && mkdir -p "$directory"
    chown -R $user "$directory"
  done

  for redis_path in "${redis_paths[@]}" ; do
    [[ ! -d "$redis_path" ]] && mkdir -p "$redis_path"
  done
  return 0
}

install_init_script()
{
  cp -f "$extension_templates_path/redis.init.template" \
    "${init_scripts_path}/redis"

  [[ -s "${init_scripts_path}/redis" && ! -x "${init_scripts_path}/redis" ]] &&
    chmod +x "${init_scripts_path}/redis"
  return 0
}

cleanup()
{
  log "Cleaning up ${package} ${version}...\n"
  if ! cd "$src_path" ; then
    fail "Failed changing into the $src_path source path."
  fi

  for entity in $(find "$src_path/" -mindepth 1 -maxdepth 1 -iname "${package}-${version}*") ; do
    rm -rf "$entity"
  done
  return 0
}

download_redis()
{
  [[ ! -d "$src_path" ]] && mkdir -p $src_path

  if ! cd $src_path ; then
    fail " Failed changing to $src_path"
  fi

  log "Downloading  ${package_file}...\n"

  if ! curl -O -L "${redis_url}" ; then
    fail "${package_file} failed to download from '${redis_url}'."
  fi
  return $?
}

extract_redis()
{
  if ! cd "$src_path" ; then
    fail "Failed changeing to $src_path"
  fi

  log "Extracting ${package} ${version}...\n"

  if ! tar zxf "${package_file}" ; then
    fail "${package_file} failed to extract."
  fi

  return 0
}

build_redis()
{
  if ! cd "${redis_src_path}" ; then
    fail "Failed changing to ${redis_src_path} directory."
  fi

  # Nothing to configure, proceeding straight to make.

  log "#compiling ${package} ${version}...\n"

  if ! make 2>&1 > "${redis_src_path}/make.log" ; then
    fail "Compiling ${package}-${version} failed, see ${redis_src_path}/make.log"
  fi
  return $?
}

install_redis()
{
  log "#installing ${package} ${version}...\n"

  for file in redis-server redis-cli ; do
    if ! install -b -d -S "${redis_src_path}/${file}" "${redis_bin_path}/${file}" ; then
      fail "${package} ${version} failed to install (specifically ${file}).\n"
    fi
  done
  return 0
}

source "${extension_scripts_path}/initialize"

while [[ $# -gt 0 ]] ; do
  token="$1" ; shift
  case "$token" in
    --trace) set -o xtrace ;;
    *)       fail "Unknown command line argument '$token' " ;;
  esac
done

download_redis

extract_redis

build_redis

install_redis

setup_redis_user

create_redis_directories

install_init_script

exit 0
