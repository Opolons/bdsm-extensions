#!/usr/bin/env bash

if [[ "$trace_flag" -eq 1 ]] ; then set -x ; fi

result=0

start_port() {
  port="$1"
  if [[ -n "$project_root" ]] ; then

    pid="$(ps auxww | grep '[m]ongrel' | grep "$port" | awk '/'${project}'/{print $2}')"

    for dir in sessions pids cache sockets ; do
      rm -f $project_root/tmp/$dir/* 2> /dev/null
    done

    command="mongrel_rails start -d -e $environment --port $port --log $log_file.$port --pid $pid_file.$port $command_params"

    (cd $project_root; daemon $command)

    if [ "$?" -ne "0" ]; then result=1 ; fi
  fi
}

start_config() {
  config_file=$1
  unset ports environment log_file pid_file project_root command_params

  $scripts_path/log "info" "Loading $config_file ..."

  source $config_file

  for port in $ports; do
    start_port $port
  done
}

if [[ "root" = "$(whoami)" ]] ; then
  # For each /etc/mongrel/*.conf file that describes a Ruby on Rails application
  # we instantiate the corresponding server instances (one for each port).
  # We also cleare the sessions, pids, cache and sockets subdirs.
  # Note that you'll hopefully get a [ OK ] line for each (instance,port) pair.

  config_path="$($config_path:-/etc/mongrel)"

  for config_file in $config_path/*.conf ; do
    start_config $config_file
  done
else
  config_path="$($config_path:-$project_root/shared/config)"
  if [[ -s "$config_path/mongrel.conf" ]] ; then
    source $config_path/
    start_config
  fi
fi

exit $?
