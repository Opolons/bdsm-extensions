#!/usr/bin/env bash

# processname: mongrel_rails
# config: /etc/sysconfig/mongrel
# instance config: /etc/mongrel/*.conf

# Source function library.
. /etc/rc.d/init.d/functions

if [ -f /etc/sysconfig/mongrel ]; then
        . /etc/sysconfig/mongrel
fi

# Path to the mongrel_rails server.
mongrel=${MONGREL-/usr/bin/mongrel_rails}
resultVAL=0

# For each /etc/mongrel/*.conf file that describes a Ruby on Rails application
# we instantiate the corresponding server instances (one for each port).
# We also cleare the sessions, pids, cache and sockets subdirs.
# Note that you'll hopefully get a [ OK ] line for each (instance,port) pair.
start() {
  result=0
  for config_file in $(ls /etc/mongrel/*conf); do
    echo -n $config_file;

    unset ports environment log_file pid_file project_root command_params

    source $config_file

    for INSTANCEPORT in $ports; do
      INSTANCELOG=$log_file.$INSTANCEPORT
      INSTANCEPID=$pid_file.$INSTANCEPORT
      CMDLINE="-e $environment --port $INSTANCEPORT --log $INSTANCELOG --pid $INSTANCEPID $command_params"
      if [ -n "$project_root" ]; then
        for SUBDIR in "sessions" "pids" "cache" "sockets"; do
          rm -f $project_root/tmp/$SUBDIR/* 2> /dev/null
        done
        (cd $project_root; daemon mongrel_rails start -d $CMDLINE)
        resultVAL=$?
        if [ "$resultVAL" -ne "0" ]; then
          result=1
        fi
        echo
      fi
    done
  done
  return $result
}

# When stopping mongrel_rails we wait a delay of 10 seconds
stop() {
  echo -n $"Stopping Mongrel"
  killproc -d 10 $mongrel
  resultVAL=$?
  # We force remove of PID files (a stopped Mongrel won't do that for us)
  for config_file in $(ls /etc/mongrel/*conf); do
    unset ports environment log_file pid_file project_root command_params
    source $config_file
    for port in $ports; do
      rm -f $pid_file.$port 2> /dev/null
    done
  done
  echo
}

# See how we were called.
case "$1" in
  start) start ; ;;
  stop) stop ; ;;
  status) status $mongrel ; resultVAL=$? ; ;;
  restart) stop ; start ;;
  *)
  echo $"Usage: $prog {start|stop|restart|condrestart|reload|status|fullstatus|graceful|help|configtest}"
  exit 1
esac

exit $resultVAL



