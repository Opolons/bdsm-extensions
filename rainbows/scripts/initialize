#!/usr/bin/env bash

set -o errtrace
export PS4='+[${BASH_SOURCE}] : ${LINENO} : ${FUNCNAME[0]:+${FUNCNAME[0]}() $ }'

[[ -s "$HOME/.rvm/scripts/rvm" ]] && [[ -z "$rvm_loaded_flag" ]] && . "$HOME/.rvm/scripts/rvm"
[[ ! -z "$HOME/.bashrc" ]] && . "$HOME/.bashrc" # Load the non-interactive environment.
[[ ! -z "$HOME/.bdsmrc" ]] && . "$HOME/.bdsmrc"
[[ "$trace_flag" -eq 1 ]] && set -x

if [[ ! -n "$environment" ]] ; then $scripts_path/log "warn" "'environment' is not set (bdsmrc)" ; fi
if [[ ! -n "$RAILS_ENV" ]] ; then $scripts_path/log "warn" "'RAILS_ENV' is not set (bdsmrc)" ; fi
if [[ ! -n "$project" ]] ; then $scripts_path/log "warn" "'project' is not set (bdsmrc)" ; fi

pidfile="$current_path/pids/$project.rainbows.pid"
[[ -s "$pidfile" ]] && pidfile_pid="$(cat "$pidfile")"

if [[ -n "$pidfile_pid" ]] && [[ -d "/proc/${pidfile_pid}" ]] ; then

  master_pid="$pidfile_pid" # Running and matches pidfile.

elif [[ -n "$running_pid" ]] && [[ -d "/proc/${running_pid}" ]] ; then
  if [[ -n "$project" ]] ; then
    running_pid="$(ps auxww | grep '[r]ainbows' | grep 'master' | awk '/'${project}'/{print $2}')"
  else
    $bdsm_scripts_path/log "warn" "'project' should be set in ~/.bdsmrc"
    running_pid="$(ps auxww | grep '[r]ainbows' | grep 'master' | awk '{print $2}')"
  fi
  printf "$running_pid" > "$pidfile" # Make sure the correct running pid is in the pidfile.
  master_pid="$running_pid" # Set to the found running pidfile.
else
  unset master_pid # Not found!
fi

[[ -d $current_path ]] && builtin cd $current_path

[[ -s "$current_path/.rvmrc" ]] && source "$current_path/.rvmrc"

